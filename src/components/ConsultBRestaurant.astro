---
const { number } = Astro.props;
---

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  .consult-button {
    position: relative;
    /* background: linear-gradient(135deg, #2563eb 0%, #4338ca 100%); */
    background: linear-gradient(135deg, #1a1a1a 0%, #2d1810 40%, #3d2414 100%);
    color: white;
    border: none;
    border-radius: 16px;
    padding: 14px 28px;
    font-size: 16px;
    font-weight: 500;
    letter-spacing: 0.3px;
    cursor: pointer;
    width: 280px;
    box-shadow:
      0 10px 25px rgba(37, 99, 235, 0.3),
      0 4px 15px rgba(0, 0, 0, 0.1);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    outline: none;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .consult-button::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;

    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.6s;
  }

  .consult-button:hover::before {
    left: 100%;
  }

  .consult-button:hover {
    /* background: linear-gradient(135deg, #1d4ed8 0%, #3730a3 100%); */
    background: linear-gradient(135deg, #493c19 0%, #5c5113 0%, #35280a 100%);
    box-shadow:
      0 20px 40px rgba(37, 99, 235, 0.4),
      0 8px 25px rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
  }

  .consult-button:active {
    transform: translateY(-1px);
    box-shadow:
      0 15px 30px rgba(37, 99, 235, 0.3),
      0 5px 15px rgba(0, 0, 0, 0.1);
  }

  .button-content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    position: relative;
    z-index: 2;
  }

  .scale-icon,
  .arrow-icon {
    width: 20px;
    height: 20px;
    transition: transform 0.3s ease;
  }

  .consult-button:hover .scale-icon {
    transform: scale(1.1) rotate(5deg);
  }

  .consult-button:hover .arrow-icon {
    transform: translateX(4px);
  }

  /* Modal styles */
  .modal {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.6);
    /* background: red !important; */
    /* background: linear-gradient(135deg, #1a1a1a 0%, #2d1810 40%, #3d2414 100%); */
    backdrop-filter: blur(8px);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    padding: 20px;
    opacity: 0;
    transition: opacity 0.3s ease;
    top: 1px;
  }

  .modal.is-open {
    display: flex;
    opacity: 1;
  }

  .modal-content {
    /* background: white; */
    background: linear-gradient(
      135deg,
      #1a1a1a 0%,
      #2d1810 40%,
      #3d2414 100%
    ) !important;
    padding: 2.5rem;
    border-radius: 24px;
    max-width: 420px;
    width: 100%;
    text-align: center;
    position: relative;
    margin-top: 300px;
    box-shadow:
      0 25px 50px rgba(0, 0, 0, 0.25),
      0 0 0 1px rgba(255, 255, 255, 0.1);
    animation: modalSlideIn 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .modal-header {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    font-weight: 700;
    /* color: #1e293b; */
    color: white !important;

    /* color: white !important; */
    /* background: linear-gradient(135deg, #2563eb, #4338ca); */
    /* background: red !important; */
    /* -webkit-background-clip: text; */
    /* -webkit-text-fill-color: transparent; */
    /* background-clip: text; */
  }

  .modal-subtitle {
    color: #64748b;
    font-size: 0.95rem;
    margin-bottom: 2rem;
    line-height: 1.5;
  }

  .modal-actions {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
  }

  .modal-actions a {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    min-width: 140px;
    padding: 1rem 1.5rem;
    border-radius: 16px;
    color: white;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.95rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }

  .modal-actions a::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.6s;
  }

  .modal-actions a:hover::before {
    left: 100%;
  }

  .modal-actions a.call {
    background: linear-gradient(135deg, #16a34a 0%, #15803d 100%);
  }

  .modal-actions a.call:hover {
    background: linear-gradient(135deg, #15803d 0%, #166534 100%);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(22, 163, 74, 0.3);
  }

  .modal-actions a.whatsapp {
    background: linear-gradient(135deg, #25d366 0%, #1ebe57 100%);
  }

  .modal-actions a.whatsapp:hover {
    background: linear-gradient(135deg, #1ebe57 0%, #16a34a 100%);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(37, 211, 102, 0.3);
  }

  .close-btn {
    position: absolute;
    top: 16px;
    right: 16px;
    background: rgba(100, 116, 139, 0.1);
    border: none;
    border-radius: 12px;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    cursor: pointer;
    color: #64748b;
    transition: all 0.3s ease;
  }

  .close-btn:hover {
    background: rgba(239, 68, 68, 0.1);
    color: #ef4444;
    transform: scale(1.1);
  }

  .contact-icon {
    width: 18px;
    height: 18px;
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
      transform: scale(0.9) translateY(-20px);
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  /* Responsive design */
  @media (max-width: 640px) {
    .consult-button {
      /* width: 100px; */
      /* max-width: 400px; */
      /* padding: 16px 24px; */
      font-size: 16px;
      /* background: red; */
    }

    .modal {
      padding: 16px;
    }

    .modal-content {
      padding: 2rem 1.5rem;
      border-radius: 20px;
      max-width: 100%;
    }

    .modal-header {
      font-size: 1.3rem;
    }

    .modal-actions {
      flex-direction: column;
      gap: 0.75rem;
    }

    .modal-actions a {
      width: 100%;
      min-width: unset;
    }
  }

  @media (max-width: 480px) {
    .modal-content {
      padding: 1.5rem 1rem;
    }

    .modal-header {
      font-size: 1.2rem;
    }

    .modal-subtitle {
      font-size: 0.9rem;
    }
  }

  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    .modal-content {
      background: rgba(30, 41, 59, 0.95);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .modal-header {
      color: white;
    }

    .modal-subtitle {
      color: #94a3b8;
    }

    .close-btn {
      color: #94a3b8;
    }

    .close-btn:hover {
      background: rgba(239, 68, 68, 0.2);
      color: #ef4444;
    }
  }

  /* Animation for better UX */
  .modal.is-closing .modal-content {
    animation: modalSlideOut 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  @keyframes modalSlideOut {
    from {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
    to {
      opacity: 0;
      transform: scale(0.9) translateY(-20px);
    }
  }
</style>

<!-- Consult Button -->
<button id="consultBtn" class="consult-button">
  <div class="button-content">
    <svg
      class="scale-icon"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
    >
      <path d="M16 11V3a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v8"></path>
      <path d="M12 2v20"></path>
      <path d="M3 12a9 9 0 0 0 9 9 9 9 0 0 0 9-9"></path>
      <path d="M9 12l3-3 3 3"></path>
    </svg>
    <span>Order Now</span>
    <svg
      class="arrow-icon"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
    >
      <path d="M5 12h14"></path>
      <path d="m12 5 7 7-7 7"></path>
    </svg>
  </div>
</button>

<!-- Modal -->
<div id="consultModal" class="modal" aria-hidden="true">
  <div class="modal-content">
    <button id="closeModalBtn" class="close-btn">
      <svg
        width="16"
        height="16"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
      >
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>

    <div class="modal-header">Place Your Order</div>
    <p class="modal-subtitle">
      Choose your preferred way to order from our restaurant
    </p>

    <div class="modal-actions">
      <a href=`tel:${number}` class="call">
        <svg
          class="contact-icon"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
          ></path>
        </svg>
        Call Now
      </a>
      <a
        href=`https://wa.me/${number}?text=Hello%2C%20I%20would%20like%20to%20place%20an%20order.`
        target="_blank"
        rel="noopener noreferrer"
        class="whatsapp"
      >
        <svg
          class="contact-icon"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"
          ></path>
        </svg>
        WhatsApp
      </a>
    </div>
  </div>
</div>

<script>
  const btn = document.getElementById("consultBtn");
  const modal = document.getElementById("consultModal");
  const closeBtn = document.getElementById("closeModalBtn");
  const modalContent = modal?.querySelector(".modal-content");

  function openModal() {
    modal?.classList.add("is-open");
    modal?.setAttribute("aria-hidden", "false");
    document.body.style.overflow = "hidden"; // Prevent background scrolling

    // Focus management for accessibility
    setTimeout(() => {
      if (
        closeBtn &&
        "focus" in closeBtn &&
        typeof closeBtn.focus === "function"
      ) {
        closeBtn.focus();
      }
    }, 100);
  }

  function closeModal() {
    modal?.classList.add("is-closing");
    document.body.style.overflow = "auto"; // Restore scrolling

    setTimeout(() => {
      modal?.classList.remove("is-open", "is-closing");
      modal?.setAttribute("aria-hidden", "true");
      if (btn && "focus" in btn && typeof btn.focus === "function") {
        btn.focus(); // Return focus to button
      }
    }, 300);
  }

  // Event listeners
  btn?.addEventListener("click", (e) => {
    e.stopPropagation();
    openModal();
  });

  closeBtn?.addEventListener("click", (e) => {
    e.stopPropagation();
    closeModal();
  });

  // Close on overlay click (anywhere outside modal content)
  modal?.addEventListener("click", (e) => {
    if (e.target === modal) {
      closeModal();
    }
  });

  // Close on Escape key
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && modal?.classList.contains("is-open")) {
      closeModal();
    }
  });

  // Trap focus within modal when open
  document.addEventListener("keydown", (e) => {
    if (!modal?.classList.contains("is-open")) return;

    if (e.key === "Tab") {
      const focusableElements = modal.querySelectorAll(
        'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'
      );
      const firstElement = focusableElements[0] as HTMLElement;
      const lastElement = focusableElements[
        focusableElements.length - 1
      ] as HTMLElement;

      if (e.shiftKey && document.activeElement === firstElement) {
        lastElement?.focus();
        e.preventDefault();
      } else if (!e.shiftKey && document.activeElement === lastElement) {
        firstElement?.focus();
        e.preventDefault();
      }
    }
  });

  // Improved mobile touch handling
  let touchStartY = 0;
  modal?.addEventListener("touchstart", (e) => {
    touchStartY = e.touches[0].clientY;
  });

  modal?.addEventListener("touchend", (e) => {
    const touchEndY = e.changedTouches[0].clientY;
    const deltaY = touchStartY - touchEndY;

    // Close modal on significant downward swipe
    if (deltaY < -100 && e.target === modal) {
      closeModal();
    }
  });
</script>
